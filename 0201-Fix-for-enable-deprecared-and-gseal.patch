From f2ba5b74f21b6d9a8d0eb2ff088a6aeab8c60530 Mon Sep 17 00:00:00 2001
From: Eric Koegel <eric.koegel@gmail.com>
Date: Mon, 28 Apr 2014 10:21:51 +0300
Subject: [PATCH 201/219] Fix for enable deprecared and gseal

Make changes so that xfpm will compile in --enable-debug=full with
the nick/xfce4-dev-tools deprecated+seal branch.
---
 common/xfpm-brightness.c                     | 24 +++++-----
 common/xfpm-common.c                         | 31 ------------
 panel-plugins/brightness/brightness-button.c | 71 ++++++++++++++--------------
 settings/xfpm-settings.c                     |  4 +-
 src/egg-idletime.c                           |  2 +-
 src/xfpm-button.c                            |  4 +-
 src/xfpm-dpms.c                              | 22 ++++-----
 src/xfpm-power-info.c                        |  2 +-
 src/xfpm-power.c                             | 17 +++----
 9 files changed, 70 insertions(+), 107 deletions(-)

diff --git a/common/xfpm-brightness.c b/common/xfpm-brightness.c
index f1524cb..e18c617 100644
--- a/common/xfpm-brightness.c
+++ b/common/xfpm-brightness.c
@@ -67,7 +67,7 @@ xfpm_brightness_xrand_get_limit (XfpmBrightness *brightness, RROutput output, gi
     gboolean ret = TRUE;
 
     gdk_error_trap_push ();
-    info = XRRQueryOutputProperty (GDK_DISPLAY (), output, brightness->priv->backlight);
+    info = XRRQueryOutputProperty (gdk_x11_get_default_xdisplay (), output, brightness->priv->backlight);
     
     if (gdk_error_trap_pop () != 0
         || info == NULL)
@@ -102,7 +102,7 @@ xfpm_brightness_xrandr_get_level (XfpmBrightness *brightness, RROutput output, g
     gboolean ret = FALSE;
 
     gdk_error_trap_push ();
-    if (XRRGetOutputProperty (GDK_DISPLAY (), output, brightness->priv->backlight,
+    if (XRRGetOutputProperty (gdk_x11_get_default_xdisplay (), output, brightness->priv->backlight,
 			      0, 4, False, False, None,
 			      &actual_type, &actual_format,
 			      &nitems, &bytes_after, ((unsigned char **)&prop)) != Success
@@ -129,10 +129,10 @@ xfpm_brightness_xrandr_set_level (XfpmBrightness *brightness, RROutput output, g
     gboolean ret = TRUE;
 
     gdk_error_trap_push ();
-    XRRChangeOutputProperty (GDK_DISPLAY (), output, brightness->priv->backlight, XA_INTEGER, 32,
+    XRRChangeOutputProperty (gdk_x11_get_default_xdisplay (), output, brightness->priv->backlight, XA_INTEGER, 32,
 			     PropModeReplace, (unsigned char *) &level, 1);
 			     
-    XFlush (GDK_DISPLAY ());
+    XFlush (gdk_x11_get_default_xdisplay ());
     gdk_flush ();
     
     if ( gdk_error_trap_pop () ) 
@@ -157,8 +157,8 @@ xfpm_brightness_setup_xrandr (XfpmBrightness *brightness)
     gint i;
     
     gdk_error_trap_push ();
-    if (!XRRQueryExtension (GDK_DISPLAY (), &event_base, &error_base) ||
-	!XRRQueryVersion (GDK_DISPLAY (), &major, &minor) )
+    if (!XRRQueryExtension (gdk_x11_get_default_xdisplay (), &event_base, &error_base) ||
+	!XRRQueryVersion (gdk_x11_get_default_xdisplay (), &major, &minor) )
     {
 	gdk_error_trap_pop ();
 	g_warning ("No XRANDR extension found");
@@ -173,10 +173,10 @@ xfpm_brightness_setup_xrandr (XfpmBrightness *brightness)
     }
     
 #ifdef RR_PROPERTY_BACKLIGHT
-    brightness->priv->backlight = XInternAtom (GDK_DISPLAY (), RR_PROPERTY_BACKLIGHT, True);
+    brightness->priv->backlight = XInternAtom (gdk_x11_get_default_xdisplay (), RR_PROPERTY_BACKLIGHT, True);
     if (brightness->priv->backlight == None) /* fall back to deprecated name */
 #endif
-    brightness->priv->backlight = XInternAtom (GDK_DISPLAY (), "BACKLIGHT", True);
+    brightness->priv->backlight = XInternAtom (gdk_x11_get_default_xdisplay (), "BACKLIGHT", True);
     
     if (brightness->priv->backlight == None) 
     {
@@ -190,18 +190,18 @@ xfpm_brightness_setup_xrandr (XfpmBrightness *brightness)
 
     gdk_error_trap_push ();
     
-    window = RootWindow (GDK_DISPLAY (), screen_num);
+    window = RootWindow (gdk_x11_get_default_xdisplay (), screen_num);
     
 #if (RANDR_MAJOR == 1 && RANDR_MINOR >=3 )
     if (major > 1 || minor >= 3)
-	brightness->priv->resource = XRRGetScreenResourcesCurrent (GDK_DISPLAY (), window);
+	brightness->priv->resource = XRRGetScreenResourcesCurrent (gdk_x11_get_default_xdisplay (), window);
     else
 #endif
-	brightness->priv->resource = XRRGetScreenResources (GDK_DISPLAY (), window);
+	brightness->priv->resource = XRRGetScreenResources (gdk_x11_get_default_xdisplay (), window);
 
     for ( i = 0; i < brightness->priv->resource->noutput; i++)
     {
-	info = XRRGetOutputInfo (GDK_DISPLAY (), brightness->priv->resource, brightness->priv->resource->outputs[i]);
+	info = XRRGetOutputInfo (gdk_x11_get_default_xdisplay (), brightness->priv->resource, brightness->priv->resource->outputs[i]);
 
 	if ( g_str_has_prefix (info->name, "LVDS") )
 	{
diff --git a/common/xfpm-common.c b/common/xfpm-common.c
index b859f16..4297585 100644
--- a/common/xfpm-common.c
+++ b/common/xfpm-common.c
@@ -52,33 +52,6 @@ GtkBuilder *xfpm_builder_new_from_string (const gchar *ui, GError **error)
     return builder;
 }
 
-static void
-xfpm_link_browser (GtkAboutDialog *about, const gchar *linkto, gpointer data)
-{
-    gchar *cmd;
-    
-    cmd = g_strdup_printf ("%s %s","xdg-open", linkto);
-    
-    if ( !g_spawn_command_line_async (cmd, NULL) )
-    {
-	g_free (cmd);
-	cmd = g_strdup_printf ("%s %s","xfbrowser4", linkto);
-	g_spawn_command_line_async (cmd, NULL);
-    }
-    g_free (cmd);
-	
-}
-
-static void
-xfpm_link_mailto (GtkAboutDialog *about, const gchar *linkto, gpointer data)
-{
-    gchar *cmd = g_strdup_printf( "%s %s", "xdg-email", linkto);
-
-    g_spawn_command_line_async (cmd, NULL);
-    
-    g_free (cmd);
-}
-	
 void       
 xfpm_lock_screen (void)
 {
@@ -134,11 +107,7 @@ xfpm_about (GtkWidget *widget, gpointer data)
 	"Ali Abdallah <aliov@xfce.org>",
 	NULL,
     };
-    
 
-    gtk_about_dialog_set_url_hook (xfpm_link_browser, NULL, NULL);
-    gtk_about_dialog_set_email_hook (xfpm_link_mailto, NULL, NULL);
-    
     gtk_show_about_dialog (NULL,
 		     "authors", authors,
 		     "copyright", "Copyright \302\251 2008-2011 Ali Abdallah",
diff --git a/panel-plugins/brightness/brightness-button.c b/panel-plugins/brightness/brightness-button.c
index 8c527bf..c2ee38b 100644
--- a/panel-plugins/brightness/brightness-button.c
+++ b/panel-plugins/brightness/brightness-button.c
@@ -96,7 +96,7 @@ brightness_button_grab_notify (BrightnessButton *button, gboolean was_grabbed)
     if (was_grabbed != FALSE)
 	return;
 
-    if (!GTK_WIDGET_HAS_GRAB (button->priv->popup))
+    if (!gtk_widget_has_grab (button->priv->popup))
 	return;
 
     if (gtk_widget_is_ancestor (gtk_grab_get_current (), button->priv->popup))
@@ -143,7 +143,7 @@ brightness_button_release_grab (BrightnessButton *button, GdkEventButton *event)
     gtk_widget_hide (button->priv->popup);
 
     e = (GdkEventButton *) gdk_event_copy ((GdkEvent *) event);
-    e->window = GTK_WIDGET (button)->window;
+    e->window = gtk_widget_get_window (GTK_WIDGET (button));
     e->type = GDK_BUTTON_RELEASE;
     gtk_widget_event (GTK_WIDGET (button), (GdkEvent *) e);
     e->window = event->window;
@@ -192,6 +192,7 @@ brightness_button_popup_win (GtkWidget *widget, GdkEvent *ev, guint32 ev_time)
     BrightnessButton *button;
     XfceScreenPosition pos;
     gboolean has_hw;
+    GtkAllocation widget_allocation, popup_allocation;
     
     button = BRIGHTNESS_BUTTON (widget);
     
@@ -209,7 +210,7 @@ brightness_button_popup_win (GtkWidget *widget, GdkEvent *ev, guint32 ev_time)
     
     gtk_grab_add (button->priv->popup);
 
-    if (gdk_pointer_grab (button->priv->popup->window, TRUE,
+    if (gdk_pointer_grab (gtk_widget_get_window (button->priv->popup), TRUE,
 			GDK_BUTTON_PRESS_MASK | GDK_BUTTON_RELEASE_MASK |
 			GDK_POINTER_MOTION_MASK, NULL, NULL, ev_time)
 	  != GDK_GRAB_SUCCESS)
@@ -219,7 +220,7 @@ brightness_button_popup_win (GtkWidget *widget, GdkEvent *ev, guint32 ev_time)
 	return FALSE;
     }
 
-    if (gdk_keyboard_grab (button->priv->popup->window, TRUE, ev_time) != GDK_GRAB_SUCCESS)
+    if (gdk_keyboard_grab (gtk_widget_get_window (button->priv->popup), TRUE, ev_time) != GDK_GRAB_SUCCESS)
     {
 	gdk_display_pointer_ungrab (display, ev_time);
 	gtk_grab_remove (button->priv->popup);
@@ -231,69 +232,67 @@ brightness_button_popup_win (GtkWidget *widget, GdkEvent *ev, guint32 ev_time)
     gtk_widget_grab_focus (button->priv->range);
     
     /* Position */
-    gdk_window_get_origin (widget->window, &x, &y);
+    gdk_window_get_origin (gtk_widget_get_window (widget), &x, &y);
 
     pos = xfce_panel_plugin_get_screen_position (button->priv->plugin);
-    
+
+    gtk_widget_get_allocation (widget, &widget_allocation);
+    gtk_widget_get_allocation (button->priv->popup, &popup_allocation);
+
     /* top */
     if ( pos == XFCE_SCREEN_POSITION_NW_H || 
 	 pos == XFCE_SCREEN_POSITION_N    ||
 	 pos == XFCE_SCREEN_POSITION_NE_H )
     {
-	x += widget->allocation.x
-		+ widget->allocation.width/2;
-	y += widget->allocation.height;
-	x -= button->priv->popup->allocation.width/2;
+	x += widget_allocation.x + widget_allocation.width/2;
+	y += widget_allocation.height;
+	x -= popup_allocation.width/2;
     }
     /* left */
     else if ( pos == XFCE_SCREEN_POSITION_NW_V ||
 	      pos == XFCE_SCREEN_POSITION_W    ||
 	      pos == XFCE_SCREEN_POSITION_SW_V )
     {
-	y += widget->allocation.y
-		+ widget->allocation.height/2;
-	x += widget->allocation.width;
-	y -= button->priv->popup->allocation.height/2;
+	y += widget_allocation.y + widget_allocation.height/2;
+	x += widget_allocation.width;
+	y -= popup_allocation.height/2;
     }
     /* right */
     else if ( pos == XFCE_SCREEN_POSITION_NE_V ||
 	      pos == XFCE_SCREEN_POSITION_E    ||
 	      pos == XFCE_SCREEN_POSITION_SE_V )
     {
-	y += widget->allocation.y
-		+ widget->allocation.height/2;
-	x -= button->priv->popup->allocation.width;
-	y -= button->priv->popup->allocation.height/2;
+	y += widget_allocation.y
+		+ widget_allocation.height/2;
+	x -= popup_allocation.width;
+	y -= popup_allocation.height/2;
     }
     /* bottom */
     else if ( pos == XFCE_SCREEN_POSITION_SW_H ||
 	      pos == XFCE_SCREEN_POSITION_S    ||
 	      pos == XFCE_SCREEN_POSITION_SE_H )
     {
-	x += widget->allocation.x
-		+ widget->allocation.width/2;
-	y -= button->priv->popup->allocation.height;
-	x -= button->priv->popup->allocation.width/2;
+	x += widget_allocation.x + widget_allocation.width/2;
+	y -= popup_allocation.height;
+	x -= popup_allocation.width/2;
     }
     else if ( pos == XFCE_SCREEN_POSITION_FLOATING_H )
     {
-	x += widget->allocation.x
-		+ widget->allocation.width/2;
-	x -= button->priv->popup->allocation.width/2;
-	if ( y > button->priv->popup->allocation.height )
-	    y -= button->priv->popup->allocation.height;
+	x += widget_allocation.x + widget_allocation.width/2;
+	x -= popup_allocation.width/2;
+	if ( y > popup_allocation.height )
+	    y -= popup_allocation.height;
 	else 
-	     y += widget->allocation.height;
+	     y += widget_allocation.height;
     }
     else if ( pos == XFCE_SCREEN_POSITION_FLOATING_V )
     {
-	y -= button->priv->popup->allocation.height/2;
-	y += widget->allocation.y
-		+ widget->allocation.height/2;
-	if ( x < button->priv->popup->allocation.width )
-	    x += widget->allocation.width;
+	y -= popup_allocation.height/2;
+	y += widget_allocation.y + widget_allocation.height/2;
+	if ( x < popup_allocation.width )
+	    x += widget_allocation.width;
 	else
-	    x -= button->priv->popup->allocation.width;
+	    x -= popup_allocation.width;
     }
     else
     {
@@ -579,8 +578,8 @@ brightness_button_set_icon (BrightnessButton *button, gint width)
 static gboolean
 brightness_button_size_changed_cb (XfcePanelPlugin *plugin, gint size, BrightnessButton *button)
 {
-    gint width = size -2 - 2* MAX(GTK_WIDGET(button)->style->xthickness,
-				  GTK_WIDGET(button)->style->xthickness);
+    gint width = size -2 - 2* MAX(gtk_widget_get_style(GTK_WIDGET(button))->xthickness,
+				  gtk_widget_get_style(GTK_WIDGET(button))->xthickness);
 				 
     gtk_widget_set_size_request (GTK_WIDGET(plugin), size, size);
     return brightness_button_set_icon (button, width);
diff --git a/settings/xfpm-settings.c b/settings/xfpm-settings.c
index cd3d6dd..3321ee5 100644
--- a/settings/xfpm-settings.c
+++ b/settings/xfpm-settings.c
@@ -943,7 +943,7 @@ xfpm_settings_on_battery (XfconfChannel *channel, gboolean auth_hibernate,
     else
     {
 	frame = GTK_WIDGET (gtk_builder_get_object (xml, "on-battery-brg-frame"));
-	gtk_widget_hide_all (frame);
+	gtk_widget_hide (frame);
     }
 #ifndef HAVE_DPMS
     if ( !has_lcd_brightness )
@@ -1092,7 +1092,7 @@ xfpm_settings_on_ac (XfconfChannel *channel, gboolean auth_suspend,
     else
     {
 	frame = GTK_WIDGET (gtk_builder_get_object (xml, "on-ac-brg-frame"));
-	gtk_widget_hide_all (frame);
+	gtk_widget_hide (frame);
     }
 #ifndef HAVE_DPMS
     if ( !has_lcd_brightness )
diff --git a/src/egg-idletime.c b/src/egg-idletime.c
index 9db5fd7..2c6b2a8 100644
--- a/src/egg-idletime.c
+++ b/src/egg-idletime.c
@@ -396,7 +396,7 @@ egg_idletime_init (EggIdletime *idletime)
 	idletime->priv->reset_set = FALSE;
 	idletime->priv->idle_counter = None;
 	idletime->priv->sync_event = 0;
-	idletime->priv->dpy = GDK_DISPLAY ();
+	idletime->priv->dpy = gdk_x11_get_default_xdisplay ();
 
 	/* get the sync event */
 	if (!XSyncQueryExtension (idletime->priv->dpy, &idletime->priv->sync_event, &sync_error)) {
diff --git a/src/xfpm-button.c b/src/xfpm-button.c
index accf76d..b7023bf 100644
--- a/src/xfpm-button.c
+++ b/src/xfpm-button.c
@@ -127,7 +127,7 @@ xfpm_button_grab_keystring (XfpmButton *button, guint keycode)
     guint ret;
     guint modmask = AnyModifier;
     
-    display = GDK_DISPLAY ();
+    display = gdk_x11_get_default_xdisplay ();
     
     gdk_error_trap_push ();
 
@@ -162,7 +162,7 @@ xfpm_button_grab_keystring (XfpmButton *button, guint keycode)
 static gboolean
 xfpm_button_xevent_key (XfpmButton *button, guint keysym , XfpmButtonKey key)
 {
-    guint keycode = XKeysymToKeycode (GDK_DISPLAY(), keysym);
+    guint keycode = XKeysymToKeycode (gdk_x11_get_default_xdisplay(), keysym);
 
     if ( keycode == 0 )
     {
diff --git a/src/xfpm-dpms.c b/src/xfpm-dpms.c
index 53f3721..fdc573c 100644
--- a/src/xfpm-dpms.c
+++ b/src/xfpm-dpms.c
@@ -67,12 +67,12 @@ xfpm_dpms_set_timeouts (XfpmDpms *dpms, guint16 standby, guint16 suspend, guint
 {
     CARD16 x_standby = 0 , x_suspend = 0, x_off = 0;
     
-    DPMSGetTimeouts (GDK_DISPLAY(), &x_standby, &x_suspend, &x_off);
+    DPMSGetTimeouts (gdk_x11_get_default_xdisplay(), &x_standby, &x_suspend, &x_off);
     
     if ( standby != x_standby || suspend != x_suspend || off != x_off )
     {
 	XFPM_DEBUG ("Settings dpms: standby=%d suspend=%d off=%d\n", standby, suspend, off);
-	DPMSSetTimeouts (GDK_DISPLAY(), standby,
+	DPMSSetTimeouts (gdk_x11_get_default_xdisplay(), standby,
 					suspend,
 					off );
     }
@@ -87,11 +87,11 @@ xfpm_dpms_disable (XfpmDpms *dpms)
     BOOL state;
     CARD16 power_level;
     
-    if (!DPMSInfo (GDK_DISPLAY(), &power_level, &state) )
+    if (!DPMSInfo (gdk_x11_get_default_xdisplay(), &power_level, &state) )
 	g_warning ("Cannot get DPMSInfo");
 	
     if ( state )
-	DPMSDisable (GDK_DISPLAY());
+	DPMSDisable (gdk_x11_get_default_xdisplay());
 }
 
 /*
@@ -103,11 +103,11 @@ xfpm_dpms_enable (XfpmDpms *dpms)
     BOOL state;
     CARD16 power_level;
     
-    if (!DPMSInfo (GDK_DISPLAY(), &power_level, &state) )
+    if (!DPMSInfo (gdk_x11_get_default_xdisplay(), &power_level, &state) )
 	g_warning ("Cannot get DPMSInfo");
 	
     if ( !state )
-	DPMSEnable (GDK_DISPLAY());
+	DPMSEnable (gdk_x11_get_default_xdisplay());
 }
 
 static void
@@ -229,7 +229,7 @@ xfpm_dpms_init(XfpmDpms *dpms)
 {
     dpms->priv = XFPM_DPMS_GET_PRIVATE(dpms);
     
-    dpms->priv->dpms_capable = DPMSCapable (GDK_DISPLAY());
+    dpms->priv->dpms_capable = DPMSCapable (gdk_x11_get_default_xdisplay());
     dpms->priv->switch_off_timeout_id = 0;
     dpms->priv->switch_on_timeout_id = 0;
 
@@ -304,7 +304,7 @@ void xfpm_dpms_force_level (XfpmDpms *dpms, CARD16 level)
     if ( !dpms->priv->dpms_capable )
 	goto out;
     
-    if ( G_UNLIKELY (!DPMSInfo (GDK_DISPLAY (), &current_level, &current_state)) )
+    if ( G_UNLIKELY (!DPMSInfo (gdk_x11_get_default_xdisplay (), &current_level, &current_state)) )
     {
 	g_warning ("Cannot get DPMSInfo");
 	goto out;
@@ -320,14 +320,14 @@ void xfpm_dpms_force_level (XfpmDpms *dpms, CARD16 level)
     {
 	XFPM_DEBUG ("Forcing DPMS mode %d", level);
 	
-	if ( !DPMSForceLevel (GDK_DISPLAY (), level ) )
+	if ( !DPMSForceLevel (gdk_x11_get_default_xdisplay (), level ) )
 	{
 	    g_warning ("Cannot set Force DPMS level %d", level);
 	    goto out;
 	}
 	if ( level == DPMSModeOn )
-	    XResetScreenSaver (GDK_DISPLAY ());
-	XSync (GDK_DISPLAY (), FALSE);
+	    XResetScreenSaver (gdk_x11_get_default_xdisplay ());
+	XSync (gdk_x11_get_default_xdisplay (), FALSE);
     }
     else
     {
diff --git a/src/xfpm-power-info.c b/src/xfpm-power-info.c
index 72f2403..2ffaa83 100644
--- a/src/xfpm-power-info.c
+++ b/src/xfpm-power-info.c
@@ -656,7 +656,7 @@ xfpm_info_update_wakeups_idle (gpointer data)
     
     info = (XfpmInfo*)data;
     
-    if ( GTK_WIDGET_VISIBLE (info->wakeups) ) 
+    if ( gtk_widget_get_visible (info->wakeups) )
         xfpm_info_update_wakeups (info);
     
     return TRUE;
diff --git a/src/xfpm-power.c b/src/xfpm-power.c
index 63b7070..2ae9dc8 100644
--- a/src/xfpm-power.c
+++ b/src/xfpm-power.c
@@ -221,7 +221,7 @@ xfpm_power_get_properties (XfpmPower *power)
     gboolean lid_is_present;
 
     /* TODO: newer versions of upower don't have that => logind handles it */
-#if !UP_CHECK_VERSION(0, 99, 0)
+#if !UP_CHECK_VERSION(0, 9, 0)
     power->priv->can_suspend = up_client_get_can_suspend(power->priv->upower);
     power->priv->can_hibernate = up_client_get_can_hibernate(power->priv->upower);
 #else
@@ -236,7 +236,7 @@ xfpm_power_get_properties (XfpmPower *power)
     }
     else
     {
-	g_warning("Error: using upower >= 0.99.0 but logind is not running");
+	g_warning("Error: using upower >= 0.9.0 but logind is not running");
 	g_warning("       suspend / hibernate will not work!");
     }
 #endif
@@ -332,7 +332,7 @@ xfpm_power_sleep (XfpmPower *power, const gchar *sleep_time, gboolean force)
     }
     else
     {
-#if !UP_CHECK_VERSION(0, 99, 0)
+#if !UP_CHECK_VERSION(0, 9, 0)
 	if (!g_strcmp0 (sleep_time, "Hibernate"))
 	{
 	    up_client_hibernate_sync(power->priv->upower, NULL, &error);
@@ -342,7 +342,7 @@ xfpm_power_sleep (XfpmPower *power, const gchar *sleep_time, gboolean force)
 	    up_client_suspend_sync(power->priv->upower, NULL, &error);
 	}
 #else
-	g_warning("Error: using upower >= 0.99.0 but logind is not running");
+	g_warning("Error: using upower >= 0.9.0 but logind is not running");
 	g_warning("       suspend / hibernate will not work!");
 #endif
     }
@@ -798,7 +798,8 @@ xfpm_power_show_critical_action_gtk (XfpmPower *power)
 
     content_area = gtk_dialog_get_content_area (GTK_DIALOG (dialog));
 
-    gtk_box_pack_start_defaults (GTK_BOX (content_area), gtk_label_new (message));
+    gtk_box_pack_start (GTK_BOX (content_area), gtk_label_new (message),
+		        TRUE, TRUE, 8);
 
     if ( power->priv->can_hibernate && power->priv->auth_hibernate )
     {
@@ -1114,12 +1115,6 @@ xfpm_power_device_removed_cb (UpClient *upower, UpDevice *device, XfpmPower *pow
 }
 #endif
 
-static void
-xfpm_power_device_changed_cb (DBusGProxy *proxy, const gchar *object_path, XfpmPower *power)
-{
-    xfpm_power_refresh_adaptor_visible (power);
-}
-
 #ifdef ENABLE_POLKIT
 static void
 xfpm_power_polkit_auth_changed_cb (XfpmPower *power)
-- 
1.9.3

